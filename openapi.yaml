openapi: 3.1.0
info:
  title: Market Data + News Proxy
  version: 1.3.0
servers:
  - url: https://market-data-proxy.onrender.com

paths:
  /quote/{symbol}:
    get:
      operationId: quoteBySymbol
      summary: Latest quote (path param)
      parameters:
        - name: symbol
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"

/news/company:
    get:
      operationId: getCompanyNews
      summary: Company headlines (Finnhub) normalized
      parameters:
        - name: symbol
          in: query
          required: true
          schema: { type: string }
        - name: days
          in: query
          required: false
          schema: { type: integer, default: 3, minimum: 1, maximum: 14 }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required: [headline, url, published_at]
                  properties:
                    ticker: { type: string, nullable: true }
                    headline: { type: string }
                    source: { type: string, nullable: true }
                    url: { type: string }
                    published_at:
                      oneOf:
                        - { type: integer, description: "Epoch seconds" }
                        - { type: string, description: "ISO8601" }
                    summary: { type: string, nullable: true }
                    
  /sma:
    get:
      operationId: getSMA
      summary: Simple Moving Average (query)
      parameters:
        - { name: symbol, in: query, required: true, schema: { type: string } }
        - { name: interval, in: query, required: true, schema: { type: string, default: "1day" } }
        - { name: time_period, in: query, required: true, schema: { type: integer, default: 50, minimum: 1 } }
        - { name: outputsize, in: query, required: false, schema: { type: integer, minimum: 1 } }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Series"

  /time_series:
    get:
      operationId: getTimeSeries
      summary: OHLCV time series (query)
      parameters:
        - { name: symbol, in: query, required: true, schema: { type: string } }
        - { name: interval, in: query, required: true, schema: { type: string, default: "1day", enum: ["1min","5min","15min","30min","1h","1day","1week","1month"] } }
        - { name: outputsize, in: query, required: false, schema: { type: integer, default: 300, minimum: 1 } }
        - { name: order, in: query, required: false, schema: { type: string, default: "desc", enum: ["asc","desc"] } }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Series"

  /news/company:
    get:
      operationId: getCompanyNews
      summary: Company headlines (Finnhub)
      parameters:
        - { name: symbol, in: query, required: true, schema: { type: string } }
        - { name: days, in: query, required: false, schema: { type: integer, default: 3, minimum: 1, maximum: 14 } }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NewsItem"

components:
  schemas:
    Quote:
      type: object
      required: [symbol, price, timestamp]
      properties:
        symbol: { type: string }
        name: { type: string, nullable: true }
        price: { type: number }
        currency: { type: string, nullable: true }
        change: { type: number, nullable: true }
        percent_change: { type: number, nullable: true }
        volume: { type: number, nullable: true }
        timestamp: { type: string, description: "ISO8601" }

    Series:
      type: object
      description: "Pass-through of Twelve Data payload (meta + values)."
      properties:
        status: { type: string, nullable: true }
        meta: { type: object, additionalProperties: true }
        values:
          type: array
          items:
            type: object
            properties:
              datetime: { type: string }
              open: { type: number, nullable: true }
              high: { type: number, nullable: true }
              low: { type: number, nullable: true }
              close: { type: number, nullable: true }
              volume: { type: number, nullable: true }
              sma: { type: number, nullable: true }
            additionalProperties: true
      required: [values]
      additionalProperties: true

    NewsItem:
      type: object
      required: [headline, url, published_at]
      properties:
        ticker: { type: string, nullable: true }
        headline: { type: string }
        source: { type: string, nullable: true }
        url: { type: string }
        published_at:
          oneOf:
            - { type: integer, description: "Epoch seconds (Finnhub)" }
            - { type: string, description: "ISO8601" }
        summary: { type: string, nullable: true }
/combined/summary:
    get:
      operationId: getCombinedSummary
      summary: Quote + SMA50/200 + ATR(14) + 52w stats + RS vs SPY + recent company news
      parameters:
        - { name: symbol, in: query, required: true, schema: { type: string } }
        - { name: interval, in: query, required: false, schema: { type: string, default: "1day" } }
        - { name: outputsize, in: query, required: false, schema: { type: integer, default: 300, minimum: 100 } }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [symbol, price]
                properties:
                  symbol: { type: string }
                  price: { type: number, nullable: true }
                  timestamp: { type: string, nullable: true }
                  sma50: { type: number, nullable: true }
                  sma200: { type: number, nullable: true }
                  atr14: { type: number, nullable: true }
                  atrpct: { type: number, nullable: true }
                  fiftyTwoWeekHigh: { type: number, nullable: true }
                  fiftyTwoWeekLow: { type: number, nullable: true }
                  distTo52wHighPct: { type: number, nullable: true }
                  rs_1m_vs_spy: { type: number, nullable: true }
                  rs_3m_vs_spy: { type: number, nullable: true }
                  news:
                    type: array
                    items:
                      type: object
                      properties:
                        ticker: { type: string, nullable: true }
                        headline: { type: string }
                        source: { type: string, nullable: true }
                        url: { type: string }
                        published_at:
                          oneOf:
                            - { type: integer }
                            - { type: string }
                        summary: { type: string, nullable: true }
                  note: { type: string, nullable: true }

